{
  "minMuleVersion": "4.1.0",
  "extensionModel": {
    "types": [
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["java.io.Serializable"],
            "parent": "",
            "classname": "org.mule.extension.socket.api.SocketAttributes",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.SocketAttributes",
          "typeAlias": {"value": "SocketAttributes"}
        },
        "type": "Object",
        "fields": []
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.extension.socket.api.SocketConnectionSettings",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.SocketConnectionSettings",
          "typeAlias": {"value": "SocketConnectionSettings"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 2
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {
              "name": "port",
              "required": "true"
            }
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "General",
                "query": false,
                "text": false,
                "order": 1
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {"type": "String"},
            "key": {
              "name": "host",
              "required": "true"
            }
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": ["org.mule.extension.socket.api.socket.tcp.TcpProtocol"],
            "parent": "",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.AbstractByteProtocol",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.AbstractByteProtocol",
          "typeAlias": {"value": "AbstractByteProtocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "default": "false",
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {"typeId": "boolean"},
            "type": "Boolean"
          },
          "key": {"name": "rethrowExceptionOnRead"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.LengthProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.CustomClassLoadingLengthProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.CustomClassLoadingLengthProtocol",
          "typeAlias": {"value": "CustomClassLoadingLengthProtocol"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "java.lang.ClassLoader",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "java.lang.ClassLoader",
                "typeAlias": {"value": "ClassLoader"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "WRITE_ONLY"},
                  "model": {
                    "annotations": {"typeId": "boolean"},
                    "type": "Boolean"
                  },
                  "key": {"name": "defaultAssertionStatus"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": "#..",
                  "key": {"name": "parent"}
                }
              ]
            },
            "key": {"name": "classLoader"}
          },
          {
            "annotations": {
              "default": "-1",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxMessageLength"}
          },
          {
            "annotations": {
              "default": "false",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "rethrowExceptionOnRead"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": ["org.mule.extension.socket.api.socket.tcp.TcpProtocol"],
            "parent": "",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.CustomProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.CustomProtocol",
          "typeAlias": {"value": "CustomProtocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "display": {"displayModel": {
              "summary": "Full qualifier class name that must implement 'TcpProtocol' that will be used as a custom protocol",
              "displayName": "Protocol Class Name"
            }},
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {"type": "String"},
          "key": {
            "name": "class",
            "required": "true"
          }
        }]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.AbstractByteProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.DirectProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.DirectProtocol",
          "typeAlias": {"value": "DirectProtocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "default": "false",
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {"typeId": "boolean"},
            "type": "Boolean"
          },
          "key": {"name": "rethrowExceptionOnRead"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.DirectProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.EOFProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.EOFProtocol",
          "typeAlias": {"value": "eof-protocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "default": "false",
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {"typeId": "boolean"},
            "type": "Boolean"
          },
          "key": {"name": "rethrowExceptionOnRead"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.DirectProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.LengthProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.LengthProtocol",
          "typeAlias": {"value": "LengthProtocol"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "default": "-1",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxMessageLength"}
          },
          {
            "annotations": {
              "default": "false",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "rethrowExceptionOnRead"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.AbstractByteProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.SafeProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.SafeProtocol",
          "typeAlias": {"value": "SafeProtocol"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "default": "-1",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "maxMessageLeght"}
          },
          {
            "annotations": {"expressionSupport": {"value": "SUPPORTED"}},
            "model": {"type": "String"},
            "key": {"name": "encoding"}
          },
          {
            "annotations": {
              "default": "false",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "rethrowExceptionOnRead"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.EOFProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.StreamingProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.StreamingProtocol",
          "typeAlias": {"value": "StreamingProtocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "default": "false",
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {"typeId": "boolean"},
            "type": "Boolean"
          },
          "key": {"name": "rethrowExceptionOnRead"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageEOFProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageEOFProtocol",
          "typeAlias": {"value": "xml-message-eof-protocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "default": "false",
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {"typeId": "boolean"},
            "type": "Boolean"
          },
          "key": {"name": "rethrowExceptionOnRead"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.connection.tcp.protocol.AbstractByteProtocol",
            "classname": "org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageProtocol",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageProtocol",
          "typeAlias": {"value": "XmlMessageProtocol"}
        },
        "type": "Object",
        "fields": [{
          "annotations": {
            "default": "false",
            "expressionSupport": {"value": "SUPPORTED"}
          },
          "model": {
            "annotations": {"typeId": "boolean"},
            "type": "Boolean"
          },
          "key": {"name": "rethrowExceptionOnRead"}
        }]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.runtime.extension.api.exception.ModuleException",
            "classname": "org.mule.extension.socket.api.exceptions.LengthExceededException",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.exceptions.LengthExceededException",
          "typeAlias": {"value": "LengthExceededException"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "java.lang.Throwable",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.lang.Throwable",
                "typeAlias": {"value": "Throwable"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": "#..",
                  "key": {"name": "cause"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "localizedMessage"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "message"}
                },
                {
                  "model": {
                    "item": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.io.Serializable"],
                          "parent": "",
                          "classname": "java.lang.StackTraceElement",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "java.lang.StackTraceElement",
                        "typeAlias": {"value": "StackTraceElement"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "className"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "fileName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {
                            "annotations": {
                              "classInformation": {
                                "implementedInterfaces": [],
                                "parent": "",
                                "classname": "int",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": true,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "lineNumber"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "methodName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {
                            "annotations": {"typeId": "boolean"},
                            "type": "Boolean"
                          },
                          "key": {"name": "nativeMethod"}
                        }
                      ]
                    },
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [
                        "java.lang.Cloneable",
                        "java.io.Serializable"
                      ],
                      "parent": "",
                      "classname": "java.lang.StackTraceElement[]",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "key": {"name": "stackTrace"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "item": "#../..",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [
                        "java.lang.Cloneable",
                        "java.io.Serializable"
                      ],
                      "parent": "",
                      "classname": "java.lang.Throwable[]",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "key": {"name": "suppressed"}
                }
              ]
            },
            "key": {"name": "cause"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "localizedMessage"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "message"}
          },
          {
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "java.lang.StackTraceElement",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.lang.StackTraceElement",
                  "typeAlias": {"value": "StackTraceElement"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "className"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "fileName"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "lineNumber"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "methodName"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "key": {"name": "nativeMethod"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": [
                  "java.lang.Cloneable",
                  "java.io.Serializable"
                ],
                "parent": "",
                "classname": "java.lang.StackTraceElement[]",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": true,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "stackTrace"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "java.lang.Throwable",
                    "hasDefaultConstructor": true,
                    "isInstantiable": true,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.lang.Throwable",
                  "typeAlias": {"value": "Throwable"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": "#..",
                    "key": {"name": "cause"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "localizedMessage"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "message"}
                  },
                  {
                    "model": {
                      "item": {
                        "annotations": {
                          "classInformation": {
                            "implementedInterfaces": ["java.io.Serializable"],
                            "parent": "",
                            "classname": "java.lang.StackTraceElement",
                            "hasDefaultConstructor": false,
                            "isInstantiable": false,
                            "isFinal": true,
                            "genericTypes": [],
                            "isInterface": false,
                            "isAbstract": false,
                            "isMap": false
                          },
                          "typeId": "java.lang.StackTraceElement",
                          "typeAlias": {"value": "StackTraceElement"}
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {"type": "String"},
                            "key": {"name": "className"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {"type": "String"},
                            "key": {"name": "fileName"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {
                              "annotations": {
                                "classInformation": {
                                  "implementedInterfaces": [],
                                  "parent": "",
                                  "classname": "int",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": true,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "lineNumber"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {"type": "String"},
                            "key": {"name": "methodName"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {
                              "annotations": {"typeId": "boolean"},
                              "type": "Boolean"
                            },
                            "key": {"name": "nativeMethod"}
                          }
                        ]
                      },
                      "annotations": {"classInformation": {
                        "implementedInterfaces": [
                          "java.lang.Cloneable",
                          "java.io.Serializable"
                        ],
                        "parent": "",
                        "classname": "java.lang.StackTraceElement[]",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      }},
                      "type": "Array"
                    },
                    "key": {"name": "stackTrace"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": "#../..",
                    "key": {"name": "suppressed"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": [
                  "java.lang.Cloneable",
                  "java.io.Serializable"
                ],
                "parent": "",
                "classname": "java.lang.Throwable[]",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": true,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "suppressed"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "org.mule.runtime.extension.api.error.ErrorTypeDefinition",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "org.mule.runtime.extension.api.error.ErrorTypeDefinition",
                "typeAlias": {"value": "ErrorTypeDefinition"}
              },
              "type": "Object",
              "fields": []
            },
            "key": {"name": "type"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.runtime.extension.api.exception.ModuleException",
            "classname": "org.mule.extension.socket.api.exceptions.ReadingTimeoutException",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.exceptions.ReadingTimeoutException",
          "typeAlias": {"value": "ReadingTimeoutException"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.io.Serializable"],
                  "parent": "",
                  "classname": "java.lang.Throwable",
                  "hasDefaultConstructor": true,
                  "isInstantiable": true,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "typeId": "java.lang.Throwable",
                "typeAlias": {"value": "Throwable"}
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": "#..",
                  "key": {"name": "cause"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "localizedMessage"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {"type": "String"},
                  "key": {"name": "message"}
                },
                {
                  "model": {
                    "item": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.io.Serializable"],
                          "parent": "",
                          "classname": "java.lang.StackTraceElement",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "typeId": "java.lang.StackTraceElement",
                        "typeAlias": {"value": "StackTraceElement"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "className"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "fileName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {
                            "annotations": {
                              "classInformation": {
                                "implementedInterfaces": [],
                                "parent": "",
                                "classname": "int",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": true,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "lineNumber"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {"type": "String"},
                          "key": {"name": "methodName"}
                        },
                        {
                          "annotations": {"visibility": "READ_ONLY"},
                          "model": {
                            "annotations": {"typeId": "boolean"},
                            "type": "Boolean"
                          },
                          "key": {"name": "nativeMethod"}
                        }
                      ]
                    },
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [
                        "java.lang.Cloneable",
                        "java.io.Serializable"
                      ],
                      "parent": "",
                      "classname": "java.lang.StackTraceElement[]",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "key": {"name": "stackTrace"}
                },
                {
                  "annotations": {"visibility": "READ_ONLY"},
                  "model": {
                    "item": "#../..",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": [
                        "java.lang.Cloneable",
                        "java.io.Serializable"
                      ],
                      "parent": "",
                      "classname": "java.lang.Throwable[]",
                      "hasDefaultConstructor": false,
                      "isInstantiable": false,
                      "isFinal": true,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Array"
                  },
                  "key": {"name": "suppressed"}
                }
              ]
            },
            "key": {"name": "cause"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "localizedMessage"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {"type": "String"},
            "key": {"name": "message"}
          },
          {
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "java.lang.StackTraceElement",
                    "hasDefaultConstructor": false,
                    "isInstantiable": false,
                    "isFinal": true,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.lang.StackTraceElement",
                  "typeAlias": {"value": "StackTraceElement"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "className"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "fileName"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "key": {"name": "lineNumber"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "methodName"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "key": {"name": "nativeMethod"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": [
                  "java.lang.Cloneable",
                  "java.io.Serializable"
                ],
                "parent": "",
                "classname": "java.lang.StackTraceElement[]",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": true,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "stackTrace"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "item": {
                "annotations": {
                  "classInformation": {
                    "implementedInterfaces": ["java.io.Serializable"],
                    "parent": "",
                    "classname": "java.lang.Throwable",
                    "hasDefaultConstructor": true,
                    "isInstantiable": true,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": false,
                    "isMap": false
                  },
                  "typeId": "java.lang.Throwable",
                  "typeAlias": {"value": "Throwable"}
                },
                "type": "Object",
                "fields": [
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": "#..",
                    "key": {"name": "cause"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "localizedMessage"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": {"type": "String"},
                    "key": {"name": "message"}
                  },
                  {
                    "model": {
                      "item": {
                        "annotations": {
                          "classInformation": {
                            "implementedInterfaces": ["java.io.Serializable"],
                            "parent": "",
                            "classname": "java.lang.StackTraceElement",
                            "hasDefaultConstructor": false,
                            "isInstantiable": false,
                            "isFinal": true,
                            "genericTypes": [],
                            "isInterface": false,
                            "isAbstract": false,
                            "isMap": false
                          },
                          "typeId": "java.lang.StackTraceElement",
                          "typeAlias": {"value": "StackTraceElement"}
                        },
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {"type": "String"},
                            "key": {"name": "className"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {"type": "String"},
                            "key": {"name": "fileName"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {
                              "annotations": {
                                "classInformation": {
                                  "implementedInterfaces": [],
                                  "parent": "",
                                  "classname": "int",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": true,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "lineNumber"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {"type": "String"},
                            "key": {"name": "methodName"}
                          },
                          {
                            "annotations": {"visibility": "READ_ONLY"},
                            "model": {
                              "annotations": {"typeId": "boolean"},
                              "type": "Boolean"
                            },
                            "key": {"name": "nativeMethod"}
                          }
                        ]
                      },
                      "annotations": {"classInformation": {
                        "implementedInterfaces": [
                          "java.lang.Cloneable",
                          "java.io.Serializable"
                        ],
                        "parent": "",
                        "classname": "java.lang.StackTraceElement[]",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      }},
                      "type": "Array"
                    },
                    "key": {"name": "stackTrace"}
                  },
                  {
                    "annotations": {"visibility": "READ_ONLY"},
                    "model": "#../..",
                    "key": {"name": "suppressed"}
                  }
                ]
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": [
                  "java.lang.Cloneable",
                  "java.io.Serializable"
                ],
                "parent": "",
                "classname": "java.lang.Throwable[]",
                "hasDefaultConstructor": false,
                "isInstantiable": false,
                "isFinal": true,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Array"
            },
            "key": {"name": "suppressed"}
          },
          {
            "annotations": {"visibility": "READ_ONLY"},
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "org.mule.runtime.extension.api.error.ErrorTypeDefinition",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": true,
                  "isAbstract": true,
                  "isMap": false
                },
                "typeId": "org.mule.runtime.extension.api.error.ErrorTypeDefinition",
                "typeAlias": {"value": "ErrorTypeDefinition"}
              },
              "type": "Object",
              "fields": []
            },
            "key": {"name": "type"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "extensibleType": {},
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.socket.tcp.AbstractTcpSocketProperties",
            "classname": "org.mule.extension.socket.api.socket.tcp.TcpClientSocketProperties",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.socket.tcp.TcpClientSocketProperties",
          "typeAlias": {"value": "TcpClientSocketProperties"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Timeout Configuration",
                "query": false,
                "text": false
              }},
              "default": "30000",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "connectionTimeout"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {
                "summary": "Indicates whether the transmitted data should not be collected together for greater efficiency, and sent immediately",
                "displayName": "Send TCP With No Delay"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "sendTcpNoDelay"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "This indicates for how long, in milliseconds, the socket will take to close so any remaining data istransmitted correctly"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "linger"}
          },
          {
            "annotations": {
              "default": "false",
              "display": {"displayModel": {"summary": "Indicates whether the open socket connections unused for a long period and with an unavailable connection should be closed"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "keepAlive"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {"summary": "Whether the socket should fail during its creation if the host set on the endpoint cannot be resolved"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "failOnUnresolvedHost"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Buffer Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "sendBufferSize"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Buffer Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "receiveBufferSize"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Timeout Configuration",
                "query": false,
                "text": false
              }},
              "display": {"displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "clientTimeout"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "reuseAddress"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "",
            "classname": "org.mule.extension.socket.api.socket.tcp.TcpProtocol",
            "hasDefaultConstructor": false,
            "isInstantiable": false,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": true,
            "isAbstract": true,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.socket.tcp.TcpProtocol",
          "typeAlias": {"value": "TcpProtocol"}
        },
        "type": "Object",
        "fields": []
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.socket.tcp.AbstractTcpSocketProperties",
            "classname": "org.mule.extension.socket.api.socket.tcp.TcpServerSocketProperties",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.socket.tcp.TcpServerSocketProperties",
          "typeAlias": {"value": "TcpServerSocketProperties"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Timeout Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "serverTimeout"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Advanced",
                "query": false,
                "text": false
              }},
              "default": "50",
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": [],
                  "parent": "",
                  "classname": "int",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "receiveBacklog"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {
                "summary": "Indicates whether the transmitted data should not be collected together for greater efficiency, and sent immediately",
                "displayName": "Send TCP With No Delay"
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "sendTcpNoDelay"}
          },
          {
            "annotations": {
              "display": {"displayModel": {"summary": "This indicates for how long, in milliseconds, the socket will take to close so any remaining data istransmitted correctly"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "linger"}
          },
          {
            "annotations": {
              "default": "false",
              "display": {"displayModel": {"summary": "Indicates whether the open socket connections unused for a long period and with an unavailable connection should be closed"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "keepAlive"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {"summary": "Whether the socket should fail during its creation if the host set on the endpoint cannot be resolved"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "failOnUnresolvedHost"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Buffer Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "sendBufferSize"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Buffer Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "receiveBufferSize"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Timeout Configuration",
                "query": false,
                "text": false
              }},
              "display": {"displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "clientTimeout"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "reuseAddress"}
          }
        ]
      },
      {
        "format": "java",
        "annotations": {
          "typeDsl": {
            "allowTopLevelDefinition": true,
            "allowInlineDefinition": true
          },
          "classInformation": {
            "implementedInterfaces": [],
            "parent": "org.mule.extension.socket.api.socket.AbstractSocketProperties",
            "classname": "org.mule.extension.socket.api.socket.udp.UdpSocketProperties",
            "hasDefaultConstructor": true,
            "isInstantiable": true,
            "isFinal": false,
            "genericTypes": [],
            "isInterface": false,
            "isAbstract": false,
            "isMap": false
          },
          "typeId": "org.mule.extension.socket.api.socket.udp.UdpSocketProperties",
          "typeAlias": {"value": "UdpSocketProperties"}
        },
        "type": "Object",
        "fields": [
          {
            "annotations": {
              "default": "false",
              "display": {"displayModel": {"summary": "Whether to enable the socket to send broadcast data"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "broadcast"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Buffer Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "sendBufferSize"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Buffer Configuration",
                "query": false,
                "text": false
              }},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "receiveBufferSize"}
          },
          {
            "annotations": {
              "layout": {"layoutModel": {
                "password": false,
                "tabName": "Timeout Configuration",
                "query": false,
                "text": false
              }},
              "display": {"displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {
                "classInformation": {
                  "implementedInterfaces": ["java.lang.Comparable"],
                  "parent": "java.lang.Number",
                  "classname": "java.lang.Integer",
                  "hasDefaultConstructor": false,
                  "isInstantiable": false,
                  "isFinal": true,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": false,
                  "isMap": false
                },
                "int": {}
              },
              "type": "Number"
            },
            "key": {"name": "clientTimeout"}
          },
          {
            "annotations": {
              "default": "true",
              "display": {"displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"}},
              "expressionSupport": {"value": "SUPPORTED"}
            },
            "model": {
              "annotations": {"typeId": "boolean"},
              "type": "Boolean"
            },
            "key": {"name": "reuseAddress"}
          }
        ]
      }
    ],
    "messageSources": [],
    "functions": [],
    "configurations": [
      {
        "externalLibraryModels": [],
        "operations": [],
        "messageSources": [{
          "errorCallback": {
            "name": "onError",
            "description": "",
            "modelProperties": {},
            "parameterGroupModels": []
          },
          "kind": "source",
          "description": "Listens for socket connections of the given protocol in the configured host and port. <p> Whenever a new connection is received, this Source will schedule a a SocketWorker that will handle the communication for that particular connection.",
          "modelProperties": {},
          "parameterGroupModels": [
            {
              "name": "General",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 1
              },
              "description": "",
              "modelProperties": {},
              "parameters": [
                {
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "outputMimeType",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "description": "The mime type of the payload that this operation outputs.",
                  "modelProperties": {},
                  "allowedStereotypeModels": [],
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED"
                },
                {
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "outputEncoding",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "description": "The encoding of the payload that this operation outputs.",
                  "modelProperties": {},
                  "allowedStereotypeModels": [],
                  "type": {
                    "format": "java",
                    "type": "String"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED"
                },
                {
                  "role": "BEHAVIOUR",
                  "defaultValue": false,
                  "description": "Whether this source should only be executed on the primary node when runnning in Cluster",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "type": "Boolean"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": false,
                    "allowsReferences": false
                  },
                  "name": "primaryNodeOnly",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "allowedStereotypeModels": []
                },
                {
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "streamingStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 3
                  },
                  "description": "Configure if repeatable streams should be used and their behaviour",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-byte-streaming-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "allowedStereotypeModels": [],
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "repeatable-in-memory-stream"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "initialBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "bufferSizeIncrement"}
                          },
                          {
                            "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                            "model": {
                              "annotations": {
                                "default": "1024",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "maxBufferSize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "repeatable-file-store-stream"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                            "model": {
                              "annotations": {
                                "default": "512",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "inMemorySize"}
                          },
                          {
                            "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                            "model": {
                              "annotations": {
                                "default": "KB",
                                "enum": {
                                  "values": [
                                    "BYTE",
                                    "KB",
                                    "MB",
                                    "GB"
                                  ],
                                  "type": "[Ljava.lang.String;"
                                }
                              },
                              "type": "String"
                            },
                            "key": {"name": "bufferUnit"}
                          }
                        ]
                      },
                      {
                        "annotations": {
                          "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                          "typeId": "non-repeatable-stream"
                        },
                        "type": "Object",
                        "fields": []
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ByteStreamingStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED"
                },
                {
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "redeliveryPolicy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Redelivery",
                    "query": false,
                    "text": false,
                    "order": 4
                  },
                  "description": "Defines a policy for processing the redelivery of the same message",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 1},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-redelivery-policy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "allowedStereotypeModels": [],
                  "type": {
                    "format": "java",
                    "annotations": {"typeId": "RedeliveryPolicy"},
                    "type": "Object",
                    "fields": [
                      {
                        "annotations": {"description": {"value": "The maximum number of times a message can be redelivered and processed unsuccessfully before triggering process-failed-message"}},
                        "model": {
                          "annotations": {
                            "default": "5",
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "maxRedeliveryCount"}
                      },
                      {
                        "annotations": {"description": {"value": "Whether to use a secure hash algorithm to identify a redelivered message"}},
                        "model": {
                          "annotations": {"default": "true"},
                          "type": "Boolean"
                        },
                        "key": {"name": "useSecureHash"}
                      },
                      {
                        "annotations": {"description": {"value": "The secure hashing algorithm to use. If not set, the default is SHA-256."}},
                        "model": {"type": "String"},
                        "key": {"name": "messageDigestAlgorithm"}
                      },
                      {
                        "annotations": {"description": {"value": "Defines one or more expressions to use to determine when a message has been redelivered. This property may only be set if useSecureHash is false."}},
                        "model": {"type": "String"},
                        "key": {"name": "idExpression"}
                      },
                      {
                        "annotations": {
                          "description": {"value": "The object store where the redelivery counter for each message is going to be stored."},
                          "stereotype": {"allowedStereotypes": [{
                            "namespace": "OS",
                            "type": "OBJECT_STORE"
                          }]}
                        },
                        "model": {"type": "@ref:org.mule.runtime.api.store.ObjectStore"},
                        "key": {"name": "objectStore"}
                      }
                    ]
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED"
                }
              ],
              "exclusiveParametersModels": [],
              "showInDsl": false
            },
            {
              "name": "Connection",
              "layoutModel": {
                "password": false,
                "query": false,
                "text": false,
                "order": 2
              },
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": true,
                  "allowsReferences": false
                },
                "name": "reconnectionStrategy",
                "layoutModel": {
                  "password": false,
                  "tabName": "Advanced",
                  "query": false,
                  "text": false,
                  "order": 5
                },
                "description": "A retry strategy in case of connectivity errors",
                "modelProperties": {
                  "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                  "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                    "localPart": "abstract-reconnection-strategy",
                    "prefix": "mule",
                    "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                  }}
                },
                "allowedStereotypeModels": [],
                "type": {
                  "of": [
                    {
                      "annotations": {"typeId": "reconnect"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        },
                        {
                          "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                          "model": {
                            "annotations": {
                              "default": "2",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "count"}
                        }
                      ]
                    },
                    {
                      "annotations": {"typeId": "reconnect-forever"},
                      "type": "Object",
                      "fields": [{
                        "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                        "model": {
                          "annotations": {
                            "default": "2000",
                            "classInformation": {
                              "implementedInterfaces": ["java.lang.Comparable"],
                              "parent": "java.lang.Number",
                              "classname": "java.lang.Long",
                              "hasDefaultConstructor": false,
                              "isInstantiable": false,
                              "isFinal": true,
                              "genericTypes": [],
                              "isInterface": false,
                              "isAbstract": false,
                              "isMap": false
                            },
                            "int": {}
                          },
                          "type": "Number"
                        },
                        "key": {"name": "frequency"}
                      }]
                    }
                  ],
                  "format": "java",
                  "annotations": {"typeId": "ReconnectionStrategy"},
                  "type": "Union"
                },
                "required": false,
                "expressionSupport": "NOT_SUPPORTED"
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }
          ],
          "hasResponse": true,
          "output": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": {
                "validMimeTypes": ["*/*"],
                "id": "*/*",
                "label": "*/*"
              },
              "annotations": {"classInformation": {
                "implementedInterfaces": ["java.io.Closeable"],
                "parent": "",
                "classname": "java.io.InputStream",
                "hasDefaultConstructor": true,
                "isInstantiable": false,
                "isFinal": false,
                "genericTypes": [],
                "isInterface": false,
                "isAbstract": true,
                "isMap": false
              }},
              "type": "Binary"
            }
          },
          "successCallback": {
            "name": "onSuccess",
            "description": "",
            "modelProperties": {},
            "parameterGroupModels": [{
              "name": "General",
              "description": "",
              "modelProperties": {},
              "parameters": [{
                "role": "BEHAVIOUR",
                "defaultValue": "#[payload]",
                "description": "",
                "modelProperties": {},
                "type": {
                  "format": "java",
                  "annotations": {"classInformation": {
                    "implementedInterfaces": ["java.io.Closeable"],
                    "parent": "",
                    "classname": "java.io.InputStream",
                    "hasDefaultConstructor": true,
                    "isInstantiable": false,
                    "isFinal": false,
                    "genericTypes": [],
                    "isInterface": false,
                    "isAbstract": true,
                    "isMap": false
                  }},
                  "type": "Binary"
                },
                "required": false,
                "expressionSupport": "SUPPORTED",
                "hasDynamicType": false,
                "isConfigOverride": false,
                "dslConfiguration": {
                  "allowTopLevelDefinition": false,
                  "allowsInlineDefinition": false,
                  "allowsReferences": false
                },
                "name": "responseValue",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 6
                },
                "allowedStereotypeModels": []
              }],
              "exclusiveParametersModels": [],
              "showInDsl": false
            }]
          },
          "outputAttributes": {
            "hasDynamicType": false,
            "description": "",
            "modelProperties": {},
            "type": {
              "format": "java",
              "type": "@ref:org.mule.extension.socket.api.SocketAttributes"
            }
          },
          "supportsStreaming": true,
          "requiresConnection": true,
          "runsOnPrimaryNodeOnly": false,
          "name": "listener",
          "stereotype": {
            "namespace": "MULE",
            "type": "SOURCE"
          },
          "nestedComponents": [],
          "transactional": false,
          "notifications": [],
          "errors": []
        }],
        "name": "listener-config",
        "description": "Config for listener sockets",
        "modelProperties": {},
        "stereotype": {
          "parent": {
            "namespace": "MULE",
            "type": "MODULE_CONFIG"
          },
          "namespace": "SOCKETS",
          "type": "LISTENER-CONFIG"
        },
        "parameterGroupModels": [{
          "name": "General",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [{
            "role": "BEHAVIOUR",
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": true,
              "allowsReferences": false
            },
            "name": "expirationPolicy",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 1
            },
            "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
            "modelProperties": {
              "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
              "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                "localPart": "expiration-policy",
                "prefix": "mule",
                "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
              }}
            },
            "allowedStereotypeModels": [],
            "type": {
              "format": "java",
              "annotations": {
                "typeDsl": {
                  "allowTopLevelDefinition": false,
                  "allowInlineDefinition": true
                },
                "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {
                    "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "5",
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "maxIdleTime"}
                },
                {
                  "annotations": {
                    "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "MINUTES",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "timeUnit"}
                }
              ]
            },
            "required": false,
            "expressionSupport": "NOT_SUPPORTED"
          }],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }],
        "connectionProviders": [
          {
            "externalLibraryModels": [],
            "connectionManagementType": "CACHED",
            "supportsConnectivityTesting": true,
            "name": "tcp-listener",
            "description": "A ConnectionProvider which provides instances of TcpListenerConnection to be used by SocketListener",
            "modelProperties": {},
            "stereotype": {
              "parent": {
                "namespace": "MULE",
                "type": "CONNECTION"
              },
              "namespace": "SOCKETS",
              "type": "TCP-LISTENER"
            },
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {"summary": "TCP Protocol to use to receive external request"},
                    "role": "BEHAVIOUR",
                    "description": "TcpProtocol that knows how the data is going to be read and written. If not specified, the SafeProtocol will be used.",
                    "modelProperties": {"org.mule.runtime.extension.api.property.DefaultImplementingTypeModelProperty": {"defaultType": {
                      "format": "java",
                      "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.SafeProtocol"
                    }}},
                    "type": {
                      "format": "java",
                      "type": "@ref:org.mule.extension.socket.api.socket.tcp.TcpProtocol"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": true
                    },
                    "name": "protocol",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"displayName": "TLS Configuration"},
                    "role": "BEHAVIOUR",
                    "description": "Its presence will imply the use of SSLServerSocket instead of plain TCP ServerSocket for accepting new SSL connections.",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }}
                    },
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeDsl": {
                          "allowTopLevelDefinition": true,
                          "allowInlineDefinition": true
                        },
                        "QName": {"value": {
                          "localPart": "context",
                          "prefix": "tls",
                          "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                        }},
                        "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                        "typeAlias": {"value": "Tls"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                          "model": {"type": "String"},
                          "key": {"name": "enabledProtocols"}
                        },
                        {
                          "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                          "model": {"type": "String"},
                          "key": {"name": "enabledCipherSuites"}
                        },
                        {
                          "annotations": {
                            "parameterDsl": {
                              "allowInlineDefinition": true,
                              "allowReferences": false
                            },
                            "expressionSupport": {"value": "NOT_SUPPORTED"}
                          },
                          "model": {
                            "annotations": {
                              "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                              "typeId": "TrustStore"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {
                                  "display": {"displayModel": {"pathModel": {
                                    "fileExtensions": [],
                                    "acceptsUrls": false,
                                    "location": "EMBEDDED",
                                    "type": "FILE"
                                  }}},
                                  "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              },
                              {
                                "annotations": {
                                  "layout": {"layoutModel": {
                                    "password": true,
                                    "query": false,
                                    "text": false
                                  }},
                                  "description": {"value": "The password used to protect the trust store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "password"}
                              },
                              {
                                "annotations": {"description": {"value": "The type of store used."}},
                                "model": {
                                  "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                  "type": "String"
                                },
                                "key": {"name": "type"}
                              },
                              {
                                "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                                "model": {"type": "String"},
                                "key": {"name": "algorithm"}
                              },
                              {
                                "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                                "model": {
                                  "annotations": {"default": "false"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "insecure"}
                              }
                            ]
                          },
                          "key": {"name": "trust-store"}
                        },
                        {
                          "annotations": {
                            "parameterDsl": {
                              "allowInlineDefinition": true,
                              "allowReferences": false
                            },
                            "expressionSupport": {"value": "NOT_SUPPORTED"}
                          },
                          "model": {
                            "annotations": {
                              "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                              "typeId": "KeyStore"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {
                                  "display": {"displayModel": {"pathModel": {
                                    "fileExtensions": [],
                                    "acceptsUrls": false,
                                    "location": "EMBEDDED",
                                    "type": "FILE"
                                  }}},
                                  "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              },
                              {
                                "annotations": {"description": {"value": "The type of store used."}},
                                "model": {
                                  "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                  "type": "String"
                                },
                                "key": {"name": "type"}
                              },
                              {
                                "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                                "model": {"type": "String"},
                                "key": {"name": "alias"}
                              },
                              {
                                "annotations": {
                                  "layout": {"layoutModel": {
                                    "password": true,
                                    "query": false,
                                    "text": false
                                  }},
                                  "description": {"value": "The password used to protect the private key."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "keyPassword"}
                              },
                              {
                                "annotations": {
                                  "layout": {"layoutModel": {
                                    "password": true,
                                    "query": false,
                                    "text": false
                                  }},
                                  "description": {"value": "The password used to protect the key store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "password"}
                              },
                              {
                                "annotations": {"description": {"value": "The algorithm used by the key store."}},
                                "model": {"type": "String"},
                                "key": {"name": "algorithm"}
                              }
                            ]
                          },
                          "key": {"name": "key-store"}
                        },
                        {
                          "annotations": {
                            "parameterDsl": {
                              "allowInlineDefinition": true,
                              "allowReferences": false
                            },
                            "expressionSupport": {"value": "NOT_SUPPORTED"}
                          },
                          "model": {
                            "of": [
                              {
                                "annotations": {
                                  "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                  "typeId": "standard-revocation-check"
                                },
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "onlyEndEntities"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "preferCrls"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "noFallback"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "softFail"}
                                  }
                                ]
                              },
                              {
                                "annotations": {
                                  "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                  "typeId": "custom-ocsp-responder"
                                },
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                    "model": {"type": "String"},
                                    "key": {"name": "url"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                    "model": {"type": "String"},
                                    "key": {"name": "certAlias"}
                                  }
                                ]
                              },
                              {
                                "annotations": {
                                  "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                  "typeId": "crl-file"
                                },
                                "type": "Object",
                                "fields": [{
                                  "annotations": {"description": {"value": "The path to the CRL file."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "path"}
                                }]
                              }
                            ],
                            "annotations": {"typeId": "RevocationCheck"},
                            "type": "Union"
                          },
                          "key": {"name": "revocation-check"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": true,
                      "allowsInlineDefinition": true,
                      "allowsReferences": true
                    },
                    "name": "tlsContext",
                    "layoutModel": {
                      "password": false,
                      "tabName": "TLS",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "port",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "description": "Connection's port number",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "host",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "description": "Connection's host name",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "reconnection",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "reconnection",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "Reconnection"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                          "model": {
                            "annotations": {"default": "false"},
                            "type": "Boolean"
                          },
                          "key": {"name": "failsDeployment"}
                        },
                        {
                          "annotations": {"description": {"value": "The reconnection strategy to use"}},
                          "model": {
                            "of": [
                              {
                                "annotations": {"typeId": "reconnect"},
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2000",
                                        "classInformation": {
                                          "implementedInterfaces": ["java.lang.Comparable"],
                                          "parent": "java.lang.Number",
                                          "classname": "java.lang.Long",
                                          "hasDefaultConstructor": false,
                                          "isInstantiable": false,
                                          "isFinal": true,
                                          "genericTypes": [],
                                          "isInterface": false,
                                          "isAbstract": false,
                                          "isMap": false
                                        },
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "frequency"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2",
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "count"}
                                  }
                                ]
                              },
                              {
                                "annotations": {"typeId": "reconnect-forever"},
                                "type": "Object",
                                "fields": [{
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                }]
                              }
                            ],
                            "annotations": {"typeId": "ReconnectionStrategy"},
                            "type": "Union"
                          },
                          "key": {"name": "reconnectionStrategy"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Advanced",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "sendBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "description": "The size of the buffer (in bytes) used when sending data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "receiveBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 7
                    },
                    "description": "The size of the buffer (in bytes) used when receiving data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"},
                    "role": "BEHAVIOUR",
                    "description": "This sets the SO_TIMEOUT value on sockets. Indicates the amount of time (in milliseconds) that the socket will wait in a blocking operation before failing. <p> A value of 0 (the default) means waiting indefinitely.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "clientTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Timeout Configuration",
                      "query": false,
                      "text": false,
                      "order": 8
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "If set (the default), SO_REUSEADDRESS is set on the sockets before binding. This helps reduce \"address already in use\" errors when a socket is re-used.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "reuseAddress",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 9
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {
                      "summary": "Indicates whether the transmitted data should not be collected together for greater efficiency, and sent immediately",
                      "displayName": "Send TCP With No Delay"
                    },
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "If set, transmitted data is not collected together for greater efficiency but sent immediately. <p> Defaults to true even though Socket default is false because optimizing to reduce amount of network traffic over latency is hardly ever a concern today.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "sendTcpNoDelay",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 10
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "This indicates for how long, in milliseconds, the socket will take to close so any remaining data istransmitted correctly"},
                    "role": "BEHAVIOUR",
                    "description": "This sets the SO_LINGER value. This is related to how long (in milliseconds) the socket will take to close so that any remaining data is transmitted correctly.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "linger",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 11
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Indicates whether the open socket connections unused for a long period and with an unavailable connection should be closed"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "false",
                    "description": "Enables SO_KEEPALIVE behavior on open sockets. This automatically checks socket connections that are open but unused for long periods and closes them if the connection becomes unavailable. <p> This is a property on the socket itself and is used by a server socket to control whether connections to the server are kept alive before they are recycled.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "keepAlive",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 12
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Whether the socket should fail during its creation if the host set on the endpoint cannot be resolved"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "Whether the socket should fail during its creation if the host set on the endpoint cannot be resolved. However, it can be set to false to allow unresolved hosts (useful when connecting through a proxy).",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "failOnUnresolvedHost",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 13
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "serverTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Timeout Configuration",
                      "query": false,
                      "text": false,
                      "order": 14
                    },
                    "description": "This sets the SO_TIMEOUT value when the socket is used as a server. This is the timeout that applies to the \"accept\" operation. A value of 0 (the ServerSocket default) causes the accept to wait indefinitely (if no connection arrives).",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "defaultValue": "50",
                    "description": "The maximum queue length for incoming connections.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "receiveBacklog",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 15
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ]
          },
          {
            "externalLibraryModels": [],
            "connectionManagementType": "CACHED",
            "supportsConnectivityTesting": true,
            "name": "udp-listener",
            "description": "A ConnectionProvider which provides instances of UdpListenerConnection to be used by SocketListener",
            "modelProperties": {},
            "stereotype": {
              "parent": {
                "namespace": "MULE",
                "type": "CONNECTION"
              },
              "namespace": "SOCKETS",
              "type": "UDP-LISTENER"
            },
            "parameterGroupModels": [
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "port",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "description": "Connection's port number",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "host",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "description": "Connection's host name",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "reconnection",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "reconnection",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "Reconnection"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                          "model": {
                            "annotations": {"default": "false"},
                            "type": "Boolean"
                          },
                          "key": {"name": "failsDeployment"}
                        },
                        {
                          "annotations": {"description": {"value": "The reconnection strategy to use"}},
                          "model": {
                            "of": [
                              {
                                "annotations": {"typeId": "reconnect"},
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2000",
                                        "classInformation": {
                                          "implementedInterfaces": ["java.lang.Comparable"],
                                          "parent": "java.lang.Number",
                                          "classname": "java.lang.Long",
                                          "hasDefaultConstructor": false,
                                          "isInstantiable": false,
                                          "isFinal": true,
                                          "genericTypes": [],
                                          "isInterface": false,
                                          "isAbstract": false,
                                          "isMap": false
                                        },
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "frequency"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2",
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "count"}
                                  }
                                ]
                              },
                              {
                                "annotations": {"typeId": "reconnect-forever"},
                                "type": "Object",
                                "fields": [{
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                }]
                              }
                            ],
                            "annotations": {"typeId": "ReconnectionStrategy"},
                            "type": "Union"
                          },
                          "key": {"name": "reconnectionStrategy"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Socket Properties",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "sendBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "description": "The size of the buffer (in bytes) used when sending data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "receiveBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "description": "The size of the buffer (in bytes) used when receiving data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"},
                    "role": "BEHAVIOUR",
                    "description": "This sets the SO_TIMEOUT value on sockets. Indicates the amount of time (in milliseconds) that the socket will wait in a blocking operation before failing. <p> A value of 0 (the default) means waiting indefinitely.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "clientTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Timeout Configuration",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "If set (the default), SO_REUSEADDRESS is set on the sockets before binding. This helps reduce \"address already in use\" errors when a socket is re-used.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "reuseAddress",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 7
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Whether to enable the socket to send broadcast data"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "false",
                    "description": "Enable/disable SO_BROADCAST into the DatagramSocket",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "broadcast",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 8
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ]
          }
        ]
      },
      {
        "externalLibraryModels": [],
        "operations": [
          {
            "kind": "operation",
            "executionType": "BLOCKING",
            "description": "Sends the data using the client associated to the RequesterConnection.",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "PRIMARY_CONTENT",
                  "defaultValue": "#[payload]",
                  "description": "data that will be serialized and sent through the socket.",
                  "modelProperties": {},
                  "type": {
                    "format": "java",
                    "annotations": {"classInformation": {
                      "implementedInterfaces": ["java.io.Closeable"],
                      "parent": "",
                      "classname": "java.io.InputStream",
                      "hasDefaultConstructor": true,
                      "isInstantiable": false,
                      "isFinal": false,
                      "genericTypes": [],
                      "isInterface": false,
                      "isAbstract": true,
                      "isMap": false
                    }},
                    "type": "Binary"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "content",
                  "layoutModel": {
                    "password": false,
                    "query": false,
                    "text": false,
                    "order": 1
                  },
                  "allowedStereotypeModels": []
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 2
                  },
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "allowedStereotypeModels": [],
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [{
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        }]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED"
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "Void"
              }
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "Void"
              }
            },
            "supportsStreaming": false,
            "requiresConnection": true,
            "blocking": true,
            "name": "send",
            "stereotype": {
              "namespace": "MULE",
              "type": "PROCESSOR"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": [
              "SOCKETS:UNKNOWN_HOST",
              "SOCKETS:CONNECTIVITY",
              "SOCKETS:CONNECTION_TIMEOUT",
              "SOCKETS:RETRY_EXHAUSTED",
              "SOCKETS:LENGTH_EXCEEDED"
            ]
          },
          {
            "kind": "operation",
            "executionType": "BLOCKING",
            "description": "Sends the data using the client associated to the RequesterConnection and then blocks until a response is received or the timeout is met, in which case the operation will return a null payload.",
            "modelProperties": {},
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "PRIMARY_CONTENT",
                    "defaultValue": "#[payload]",
                    "description": "data that will be serialized and sent through the socket.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"classInformation": {
                        "implementedInterfaces": ["java.io.Closeable"],
                        "parent": "",
                        "classname": "java.io.InputStream",
                        "hasDefaultConstructor": true,
                        "isInstantiable": false,
                        "isFinal": false,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": true,
                        "isMap": false
                      }},
                      "type": "Binary"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "content",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "outputMimeType",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "description": "The mime type of the payload that this operation outputs.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "outputEncoding",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "description": "The encoding of the payload that this operation outputs.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "streamingStrategy",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "description": "Configure if repeatable streams should be used and their behaviour",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 2},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "abstract-byte-streaming-strategy",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "of": [
                        {
                          "annotations": {"typeId": "repeatable-in-memory-stream"},
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "This is the amount of memory that will be allocated in order to consume the stream and provide random access to it. If the stream contains more data than can be fit into this buffer, then it will be expanded by according to the bufferSizeIncrement attribute, with an upper limit of maxInMemorySize."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "initialBufferSize"}
                            },
                            {
                              "annotations": {"description": {"value": "This is by how much will be buffer size by expanded if it exceeds its initial size. Setting a value of zero or lower will mean that the buffer should not expand, meaning that a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised when the buffer gets full."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "bufferSizeIncrement"}
                            },
                            {
                              "annotations": {"description": {"value": "This is the maximum amount of memory that will be used. If more than that is used then a STREAM_MAXIMUM_SIZE_EXCEEDED error will be raised. A value lower or equal to zero means no limit."}},
                              "model": {
                                "annotations": {
                                  "default": "1024",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "maxBufferSize"}
                            },
                            {
                              "annotations": {"description": {"value": "The unit in which all these attributes are expressed"}},
                              "model": {
                                "annotations": {
                                  "default": "KB",
                                  "enum": {
                                    "values": [
                                      "BYTE",
                                      "KB",
                                      "MB",
                                      "GB"
                                    ],
                                    "type": "[Ljava.lang.String;"
                                  }
                                },
                                "type": "String"
                              },
                              "key": {"name": "bufferUnit"}
                            }
                          ]
                        },
                        {
                          "annotations": {"typeId": "repeatable-file-store-stream"},
                          "type": "Object",
                          "fields": [
                            {
                              "annotations": {"description": {"value": "Defines the maximum memory that the stream should use to keep data in memory. If more than that is consumed then it will start to buffer the content on disk."}},
                              "model": {
                                "annotations": {
                                  "default": "512",
                                  "int": {}
                                },
                                "type": "Number"
                              },
                              "key": {"name": "inMemorySize"}
                            },
                            {
                              "annotations": {"description": {"value": "The unit in which maxInMemorySize is expressed"}},
                              "model": {
                                "annotations": {
                                  "default": "KB",
                                  "enum": {
                                    "values": [
                                      "BYTE",
                                      "KB",
                                      "MB",
                                      "GB"
                                    ],
                                    "type": "[Ljava.lang.String;"
                                  }
                                },
                                "type": "String"
                              },
                              "key": {"name": "bufferUnit"}
                            }
                          ]
                        },
                        {
                          "annotations": {
                            "description": {"value": "This configuration allows the input stream to be read only once. It will not allow to seek randomly which will limit the transformations that DW can perform on this stream. Use this option for use cases which just require moving data around from one system to another to get optimum performance."},
                            "typeId": "non-repeatable-stream"
                          },
                          "type": "Object",
                          "fields": []
                        }
                      ],
                      "format": "java",
                      "annotations": {"typeId": "ByteStreamingStrategy"},
                      "type": "Union"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Output",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "displayModel": {"displayName": "Target Variable"},
                    "role": "BEHAVIOUR",
                    "description": "The name of a variable on which the operation's output will be placed",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "target",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"displayName": "Target Value"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "#[payload]",
                    "description": "An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": false,
                    "expressionSupport": "REQUIRED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "targetValue",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": false
                  },
                  "name": "reconnectionStrategy",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Advanced",
                    "query": false,
                    "text": false,
                    "order": 7
                  },
                  "description": "A retry strategy in case of connectivity errors",
                  "modelProperties": {
                    "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                    "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                      "localPart": "abstract-reconnection-strategy",
                      "prefix": "mule",
                      "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                    }}
                  },
                  "allowedStereotypeModels": [],
                  "type": {
                    "of": [
                      {
                        "annotations": {"typeId": "reconnect"},
                        "type": "Object",
                        "fields": [
                          {
                            "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                            "model": {
                              "annotations": {
                                "default": "2000",
                                "classInformation": {
                                  "implementedInterfaces": ["java.lang.Comparable"],
                                  "parent": "java.lang.Number",
                                  "classname": "java.lang.Long",
                                  "hasDefaultConstructor": false,
                                  "isInstantiable": false,
                                  "isFinal": true,
                                  "genericTypes": [],
                                  "isInterface": false,
                                  "isAbstract": false,
                                  "isMap": false
                                },
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "frequency"}
                          },
                          {
                            "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                            "model": {
                              "annotations": {
                                "default": "2",
                                "int": {}
                              },
                              "type": "Number"
                            },
                            "key": {"name": "count"}
                          }
                        ]
                      },
                      {
                        "annotations": {"typeId": "reconnect-forever"},
                        "type": "Object",
                        "fields": [{
                          "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                          "model": {
                            "annotations": {
                              "default": "2000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "frequency"}
                        }]
                      }
                    ],
                    "format": "java",
                    "annotations": {"typeId": "ReconnectionStrategy"},
                    "type": "Union"
                  },
                  "required": false,
                  "expressionSupport": "NOT_SUPPORTED"
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ],
            "output": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": {
                  "validMimeTypes": ["*/*"],
                  "id": "*/*",
                  "label": "*/*"
                },
                "annotations": {"classInformation": {
                  "implementedInterfaces": ["java.io.Closeable"],
                  "parent": "",
                  "classname": "java.io.InputStream",
                  "hasDefaultConstructor": true,
                  "isInstantiable": false,
                  "isFinal": false,
                  "genericTypes": [],
                  "isInterface": false,
                  "isAbstract": true,
                  "isMap": false
                }},
                "type": "Binary"
              }
            },
            "outputAttributes": {
              "hasDynamicType": false,
              "description": "",
              "modelProperties": {},
              "type": {
                "format": "java",
                "type": "@ref:org.mule.extension.socket.api.SocketAttributes"
              }
            },
            "supportsStreaming": true,
            "requiresConnection": true,
            "blocking": true,
            "name": "sendAndReceive",
            "stereotype": {
              "namespace": "MULE",
              "type": "PROCESSOR"
            },
            "nestedComponents": [],
            "transactional": false,
            "notifications": [],
            "errors": [
              "SOCKETS:UNKNOWN_HOST",
              "SOCKETS:CONNECTIVITY",
              "SOCKETS:CONNECTION_TIMEOUT",
              "SOCKETS:RETRY_EXHAUSTED",
              "SOCKETS:LENGTH_EXCEEDED"
            ]
          }
        ],
        "messageSources": [],
        "name": "request-config",
        "description": "Config for requester sockets",
        "modelProperties": {},
        "stereotype": {
          "parent": {
            "namespace": "MULE",
            "type": "MODULE_CONFIG"
          },
          "namespace": "SOCKETS",
          "type": "REQUEST-CONFIG"
        },
        "parameterGroupModels": [{
          "name": "General",
          "layoutModel": {
            "password": false,
            "query": false,
            "text": false,
            "order": 1
          },
          "description": "",
          "modelProperties": {},
          "parameters": [{
            "role": "BEHAVIOUR",
            "hasDynamicType": false,
            "isConfigOverride": false,
            "dslConfiguration": {
              "allowTopLevelDefinition": false,
              "allowsInlineDefinition": true,
              "allowsReferences": false
            },
            "name": "expirationPolicy",
            "layoutModel": {
              "password": false,
              "tabName": "Advanced",
              "query": false,
              "text": false,
              "order": 1
            },
            "description": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.",
            "modelProperties": {
              "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 4},
              "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                "localPart": "expiration-policy",
                "prefix": "mule",
                "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
              }}
            },
            "allowedStereotypeModels": [],
            "type": {
              "format": "java",
              "annotations": {
                "typeDsl": {
                  "allowTopLevelDefinition": false,
                  "allowInlineDefinition": true
                },
                "description": {"value": "Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit."},
                "typeId": "org.mule.runtime.extension.api.runtime.ExpirationPolicy"
              },
              "type": "Object",
              "fields": [
                {
                  "annotations": {
                    "description": {"value": "A scalar time value for the maximum amount of time a dynamic configuration instance should be allowed to be idle before it's considered eligible for expiration"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "5",
                      "classInformation": {
                        "implementedInterfaces": ["java.lang.Comparable"],
                        "parent": "java.lang.Number",
                        "classname": "java.lang.Long",
                        "hasDefaultConstructor": false,
                        "isInstantiable": false,
                        "isFinal": true,
                        "genericTypes": [],
                        "isInterface": false,
                        "isAbstract": false,
                        "isMap": false
                      },
                      "int": {}
                    },
                    "type": "Number"
                  },
                  "key": {"name": "maxIdleTime"}
                },
                {
                  "annotations": {
                    "description": {"value": "A time unit that qualifies the maxIdleTime attribute"},
                    "expressionSupport": {"value": "NOT_SUPPORTED"}
                  },
                  "model": {
                    "annotations": {
                      "default": "MINUTES",
                      "enum": {
                        "values": [
                          "NANOSECONDS",
                          "MICROSECONDS",
                          "MILLISECONDS",
                          "SECONDS",
                          "MINUTES",
                          "HOURS",
                          "DAYS"
                        ],
                        "type": "[Ljava.lang.String;"
                      }
                    },
                    "type": "String"
                  },
                  "key": {"name": "timeUnit"}
                }
              ]
            },
            "required": false,
            "expressionSupport": "NOT_SUPPORTED"
          }],
          "exclusiveParametersModels": [],
          "showInDsl": false
        }],
        "connectionProviders": [
          {
            "externalLibraryModels": [],
            "connectionManagementType": "POOLING",
            "supportsConnectivityTesting": true,
            "name": "tcp-requester",
            "description": "A ConnectionProvider which provides instances of TcpRequesterConnection to be used by the SocketOperations",
            "modelProperties": {},
            "stereotype": {
              "parent": {
                "namespace": "MULE",
                "type": "CONNECTION"
              },
              "namespace": "SOCKETS",
              "type": "TCP-REQUESTER"
            },
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": true
                    },
                    "name": "localAddressSettings",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Local Address Settings",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "description": "This configuration parameter refers to the address where the Socket should bind to.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "@ref:org.mule.extension.socket.api.SocketConnectionSettings"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "displayModel": {"summary": "TCP Protocol to use when doing requests"},
                    "role": "BEHAVIOUR",
                    "description": "TcpProtocol that knows how the data is going to be read and written. If not specified, the SafeProtocol will be used.",
                    "modelProperties": {"org.mule.runtime.extension.api.property.DefaultImplementingTypeModelProperty": {"defaultType": {
                      "format": "java",
                      "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.SafeProtocol"
                    }}},
                    "type": {
                      "format": "java",
                      "type": "@ref:org.mule.extension.socket.api.socket.tcp.TcpProtocol"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": true
                    },
                    "name": "protocol",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Connection",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"displayName": "TLS Configuration"},
                    "role": "BEHAVIOUR",
                    "description": "Its presence will imply the use of SSLSocket instead of plain TCP Socket for establishing a connection over SSL.",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 8},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "context",
                        "prefix": "tls",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                      }}
                    },
                    "type": {
                      "format": "java",
                      "annotations": {
                        "typeDsl": {
                          "allowTopLevelDefinition": true,
                          "allowInlineDefinition": true
                        },
                        "QName": {"value": {
                          "localPart": "context",
                          "prefix": "tls",
                          "namespaceURI": "http://www.mulesoft.org/schema/mule/tls"
                        }},
                        "typeId": "org.mule.runtime.api.tls.TlsContextFactory",
                        "typeAlias": {"value": "Tls"}
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "A comma separated list of protocols enabled for this context."}},
                          "model": {"type": "String"},
                          "key": {"name": "enabledProtocols"}
                        },
                        {
                          "annotations": {"description": {"value": "A comma separated list of cipher suites enabled for this context."}},
                          "model": {"type": "String"},
                          "key": {"name": "enabledCipherSuites"}
                        },
                        {
                          "annotations": {
                            "parameterDsl": {
                              "allowInlineDefinition": true,
                              "allowReferences": false
                            },
                            "expressionSupport": {"value": "NOT_SUPPORTED"}
                          },
                          "model": {
                            "annotations": {
                              "description": {"value": "Trust store configuration. If used client side, the trust store contains the certificates of the trusted servers. If used server side, it contains the certificates of the trusted clients."},
                              "typeId": "TrustStore"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {
                                  "display": {"displayModel": {"pathModel": {
                                    "fileExtensions": [],
                                    "acceptsUrls": false,
                                    "location": "EMBEDDED",
                                    "type": "FILE"
                                  }}},
                                  "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the trust store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              },
                              {
                                "annotations": {
                                  "layout": {"layoutModel": {
                                    "password": true,
                                    "query": false,
                                    "text": false
                                  }},
                                  "description": {"value": "The password used to protect the trust store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "password"}
                              },
                              {
                                "annotations": {"description": {"value": "The type of store used."}},
                                "model": {
                                  "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                  "type": "String"
                                },
                                "key": {"name": "type"}
                              },
                              {
                                "annotations": {"description": {"value": "The algorithm used by the trust store."}},
                                "model": {"type": "String"},
                                "key": {"name": "algorithm"}
                              },
                              {
                                "annotations": {"description": {"value": "If true, no certificate validations will be performed, rendering connections vulnerable to attacks. Use at your own risk."}},
                                "model": {
                                  "annotations": {"default": "false"},
                                  "type": "Boolean"
                                },
                                "key": {"name": "insecure"}
                              }
                            ]
                          },
                          "key": {"name": "trust-store"}
                        },
                        {
                          "annotations": {
                            "parameterDsl": {
                              "allowInlineDefinition": true,
                              "allowReferences": false
                            },
                            "expressionSupport": {"value": "NOT_SUPPORTED"}
                          },
                          "model": {
                            "annotations": {
                              "description": {"value": "Key store configuration. The key store contains the keys of this server/client."},
                              "typeId": "KeyStore"
                            },
                            "type": "Object",
                            "fields": [
                              {
                                "annotations": {
                                  "display": {"displayModel": {"pathModel": {
                                    "fileExtensions": [],
                                    "acceptsUrls": false,
                                    "location": "EMBEDDED",
                                    "type": "FILE"
                                  }}},
                                  "description": {"value": "The location (which will be resolved relative to the current classpath and file system, if possible) of the key store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "path"}
                              },
                              {
                                "annotations": {"description": {"value": "The type of store used."}},
                                "model": {
                                  "annotations": {"display": {"displayModel": {"example": "jks, jceks, pkcs12 or other store type"}}},
                                  "type": "String"
                                },
                                "key": {"name": "type"}
                              },
                              {
                                "annotations": {"description": {"value": "When the key store contains many private keys, this attribute indicates the alias of the key that should be used. If not defined, the first key in the file will be used by default."}},
                                "model": {"type": "String"},
                                "key": {"name": "alias"}
                              },
                              {
                                "annotations": {
                                  "layout": {"layoutModel": {
                                    "password": true,
                                    "query": false,
                                    "text": false
                                  }},
                                  "description": {"value": "The password used to protect the private key."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "keyPassword"}
                              },
                              {
                                "annotations": {
                                  "layout": {"layoutModel": {
                                    "password": true,
                                    "query": false,
                                    "text": false
                                  }},
                                  "description": {"value": "The password used to protect the key store."}
                                },
                                "model": {"type": "String"},
                                "key": {"name": "password"}
                              },
                              {
                                "annotations": {"description": {"value": "The algorithm used by the key store."}},
                                "model": {"type": "String"},
                                "key": {"name": "algorithm"}
                              }
                            ]
                          },
                          "key": {"name": "key-store"}
                        },
                        {
                          "annotations": {
                            "parameterDsl": {
                              "allowInlineDefinition": true,
                              "allowReferences": false
                            },
                            "expressionSupport": {"value": "NOT_SUPPORTED"}
                          },
                          "model": {
                            "of": [
                              {
                                "annotations": {
                                  "description": {"value": "Uses the standard JVM certificate revocation checks, which depend on the certificate having the corresponding extension points (additional tags for CRLDP or OCSP), and the availability of revocation servers."},
                                  "typeId": "standard-revocation-check"
                                },
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "Only verify the last element of the certificate chain."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "onlyEndEntities"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Try CRL instead of OCSP first."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "preferCrls"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Do not use the secondary checking method (the one not selected before)."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "noFallback"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Avoid verification failure when the revocation server can not be reached or is busy."}},
                                    "model": {
                                      "annotations": {"default": "false"},
                                      "type": "Boolean"
                                    },
                                    "key": {"name": "softFail"}
                                  }
                                ]
                              },
                              {
                                "annotations": {
                                  "description": {"value": "Uses a custom OCSP responder for certificate revocation checks, with a specific trusted certificate for revocating other keys. This ignores extension points (additional tags for CRLDP or OCSP) present in the certificate, if any."},
                                  "typeId": "custom-ocsp-responder"
                                },
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "The URL of the OCSP responder."}},
                                    "model": {"type": "String"},
                                    "key": {"name": "url"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "Alias of the signing certificate for the OCSP response (must be in the trust store), if present."}},
                                    "model": {"type": "String"},
                                    "key": {"name": "certAlias"}
                                  }
                                ]
                              },
                              {
                                "annotations": {
                                  "description": {"value": "Local file based certificate revocation checker, which requires a CRL file to be accessible and ignores extension points (additional tags for CRLDP and OCSP) in the certificate."},
                                  "typeId": "crl-file"
                                },
                                "type": "Object",
                                "fields": [{
                                  "annotations": {"description": {"value": "The path to the CRL file."}},
                                  "model": {"type": "String"},
                                  "key": {"name": "path"}
                                }]
                              }
                            ],
                            "annotations": {"typeId": "RevocationCheck"},
                            "type": "Union"
                          },
                          "key": {"name": "revocation-check"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": true,
                      "allowsInlineDefinition": true,
                      "allowsReferences": true
                    },
                    "name": "tlsContext",
                    "layoutModel": {
                      "password": false,
                      "tabName": "TLS",
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "port",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "description": "Connection's port number",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "host",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "description": "Connection's host name",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "reconnection",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "reconnection",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "Reconnection"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                          "model": {
                            "annotations": {"default": "false"},
                            "type": "Boolean"
                          },
                          "key": {"name": "failsDeployment"}
                        },
                        {
                          "annotations": {"description": {"value": "The reconnection strategy to use"}},
                          "model": {
                            "of": [
                              {
                                "annotations": {"typeId": "reconnect"},
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2000",
                                        "classInformation": {
                                          "implementedInterfaces": ["java.lang.Comparable"],
                                          "parent": "java.lang.Number",
                                          "classname": "java.lang.Long",
                                          "hasDefaultConstructor": false,
                                          "isInstantiable": false,
                                          "isFinal": true,
                                          "genericTypes": [],
                                          "isInterface": false,
                                          "isAbstract": false,
                                          "isMap": false
                                        },
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "frequency"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2",
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "count"}
                                  }
                                ]
                              },
                              {
                                "annotations": {"typeId": "reconnect-forever"},
                                "type": "Object",
                                "fields": [{
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                }]
                              }
                            ],
                            "annotations": {"typeId": "ReconnectionStrategy"},
                            "type": "Union"
                          },
                          "key": {"name": "reconnectionStrategy"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "poolingProfile",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 7
                    },
                    "description": "Characteristics of the connection pool",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 5},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "pooling-profile",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "description": {"value": "A pooling profile is used to configure the pooling behaviour of Mule components. Each component can have its own pooling profile."},
                        "typeId": "org.mule.runtime.api.config.PoolingProfile"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "Controls the maximum number of Mule components that can be borrowed from a session at one time. When set to a negative value, there is no limit to the number of components that may be active at one time. When maxActive is exceeded, the pool is said to be exhausted."}},
                          "model": {
                            "annotations": {
                              "default": "5",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxActive"}
                        },
                        {
                          "annotations": {"description": {"value": "Controls the maximum number of Mule components that can sit idle in the pool at any time. When set to a negative value, there is no limit to the number of Mule components that may be idle at one time."}},
                          "model": {
                            "annotations": {
                              "default": "5",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxIdle"}
                        },
                        {
                          "annotations": {"description": {"value": "Specifies the number of milliseconds to wait for a pooled component to become available when the pool is exhausted and the exhaustedAction is set to WHEN_EXHAUSTED_WAIT."}},
                          "model": {
                            "annotations": {
                              "default": "4000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxWait"}
                        },
                        {
                          "annotations": {"description": {"value": "Determines the minimum amount of time an object may sit idle in the pool before it is eligible for eviction. When non-positive, no objects will be evicted from the pool due to idle time alone."}},
                          "model": {
                            "annotations": {
                              "default": "1800000",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "minEvictionMillis"}
                        },
                        {
                          "annotations": {"description": {"value": "Specifies the number of milliseconds between runs of the object evictor. When non-positive, no object evictor is executed."}},
                          "model": {
                            "annotations": {
                              "default": "-1",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "evictionCheckIntervalMillis"}
                        },
                        {
                          "annotations": {"description": {"value": "Specifies the behavior of the Mule component pool when the pool is exhausted. Possible values are: \"WHEN_EXHAUSTED_FAIL\", which will throw a NoSuchElementException, \"WHEN_EXHAUSTED_WAIT\", which will block by invoking Object.wait(long) until a new or idle object is available, or WHEN_EXHAUSTED_GROW, which will create a new Mule instance and return it, essentially making maxActive meaningless. If a positive maxWait value is supplied, it will block for at most that many milliseconds, after which a NoSuchElementException will be thrown. If maxThreadWait is a negative value, it will block indefinitely."}},
                          "model": {
                            "annotations": {
                              "default": "WHEN_EXHAUSTED_GROW",
                              "enum": {
                                "values": [
                                  "WHEN_EXHAUSTED_GROW",
                                  "WHEN_EXHAUSTED_WAIT",
                                  "WHEN_EXHAUSTED_FAIL"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "exhaustedAction"}
                        },
                        {
                          "annotations": {"description": {"value": "Determines how components in a pool should be initialized. The possible values are: INITIALISE_NONE (will not load any components into the pool on startup), INITIALISE_ONE (will load one initial component into the pool on startup), or INITIALISE_ALL (will load all components in the pool on startup)"}},
                          "model": {
                            "annotations": {
                              "default": "INITIALISE_ONE",
                              "enum": {
                                "values": [
                                  "INITIALISE_NONE",
                                  "INITIALISE_ONE",
                                  "INITIALISE_ALL"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "initialisationPolicy"}
                        },
                        {
                          "annotations": {"description": {"value": "Whether pooling should be disabled"}},
                          "model": {
                            "annotations": {"default": "false"},
                            "type": "Boolean"
                          },
                          "key": {"name": "disabled"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Socket Properties",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 3
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "sendBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 8
                    },
                    "description": "The size of the buffer (in bytes) used when sending data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "receiveBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 9
                    },
                    "description": "The size of the buffer (in bytes) used when receiving data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"},
                    "role": "BEHAVIOUR",
                    "description": "This sets the SO_TIMEOUT value on sockets. Indicates the amount of time (in milliseconds) that the socket will wait in a blocking operation before failing. <p> A value of 0 (the default) means waiting indefinitely.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "clientTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Timeout Configuration",
                      "query": false,
                      "text": false,
                      "order": 10
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "If set (the default), SO_REUSEADDRESS is set on the sockets before binding. This helps reduce \"address already in use\" errors when a socket is re-used.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "reuseAddress",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 11
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {
                      "summary": "Indicates whether the transmitted data should not be collected together for greater efficiency, and sent immediately",
                      "displayName": "Send TCP With No Delay"
                    },
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "If set, transmitted data is not collected together for greater efficiency but sent immediately. <p> Defaults to true even though Socket default is false because optimizing to reduce amount of network traffic over latency is hardly ever a concern today.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "sendTcpNoDelay",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 12
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "This indicates for how long, in milliseconds, the socket will take to close so any remaining data istransmitted correctly"},
                    "role": "BEHAVIOUR",
                    "description": "This sets the SO_LINGER value. This is related to how long (in milliseconds) the socket will take to close so that any remaining data is transmitted correctly.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "linger",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 13
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Indicates whether the open socket connections unused for a long period and with an unavailable connection should be closed"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "false",
                    "description": "Enables SO_KEEPALIVE behavior on open sockets. This automatically checks socket connections that are open but unused for long periods and closes them if the connection becomes unavailable. <p> This is a property on the socket itself and is used by a server socket to control whether connections to the server are kept alive before they are recycled.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "keepAlive",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 14
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Whether the socket should fail during its creation if the host set on the endpoint cannot be resolved"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "Whether the socket should fail during its creation if the host set on the endpoint cannot be resolved. However, it can be set to false to allow unresolved hosts (useful when connecting through a proxy).",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "failOnUnresolvedHost",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 15
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "role": "BEHAVIOUR",
                    "defaultValue": "30000",
                    "description": "Number of milliseconds to wait until an outbound connection to a remote server is successfully created. Defaults to 30 seconds.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": [],
                          "parent": "",
                          "classname": "int",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": true,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "connectionTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Timeout Configuration",
                      "query": false,
                      "text": false,
                      "order": 16
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ]
          },
          {
            "externalLibraryModels": [],
            "connectionManagementType": "POOLING",
            "supportsConnectivityTesting": true,
            "name": "udp-requester",
            "description": "A ConnectionProvider which provides instances of UdpRequesterConnection to be used by the SocketOperations",
            "modelProperties": {},
            "stereotype": {
              "parent": {
                "namespace": "MULE",
                "type": "CONNECTION"
              },
              "namespace": "SOCKETS",
              "type": "UDP-REQUESTER"
            },
            "parameterGroupModels": [
              {
                "name": "General",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 0
                },
                "description": "",
                "modelProperties": {},
                "parameters": [{
                  "role": "BEHAVIOUR",
                  "hasDynamicType": false,
                  "isConfigOverride": false,
                  "dslConfiguration": {
                    "allowTopLevelDefinition": false,
                    "allowsInlineDefinition": true,
                    "allowsReferences": true
                  },
                  "name": "localAddressSettings",
                  "layoutModel": {
                    "password": false,
                    "tabName": "Local Address Settings",
                    "query": false,
                    "text": false,
                    "order": 10
                  },
                  "description": "This configuration parameter refers to the address where the DatagramSocket should bind to.",
                  "modelProperties": {},
                  "allowedStereotypeModels": [],
                  "type": {
                    "format": "java",
                    "type": "@ref:org.mule.extension.socket.api.SocketConnectionSettings"
                  },
                  "required": false,
                  "expressionSupport": "SUPPORTED"
                }],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Connection",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 1
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "port",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 2
                    },
                    "description": "Connection's port number",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "host",
                    "layoutModel": {
                      "password": false,
                      "tabName": "General",
                      "query": false,
                      "text": false,
                      "order": 1
                    },
                    "description": "Connection's host name",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "type": "String"
                    },
                    "required": true,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "reconnection",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 3
                    },
                    "description": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 3},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "reconnection",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "Reconnection"},
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy"}},
                          "model": {
                            "annotations": {"default": "false"},
                            "type": "Boolean"
                          },
                          "key": {"name": "failsDeployment"}
                        },
                        {
                          "annotations": {"description": {"value": "The reconnection strategy to use"}},
                          "model": {
                            "of": [
                              {
                                "annotations": {"typeId": "reconnect"},
                                "type": "Object",
                                "fields": [
                                  {
                                    "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2000",
                                        "classInformation": {
                                          "implementedInterfaces": ["java.lang.Comparable"],
                                          "parent": "java.lang.Number",
                                          "classname": "java.lang.Long",
                                          "hasDefaultConstructor": false,
                                          "isInstantiable": false,
                                          "isFinal": true,
                                          "genericTypes": [],
                                          "isInterface": false,
                                          "isAbstract": false,
                                          "isMap": false
                                        },
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "frequency"}
                                  },
                                  {
                                    "annotations": {"description": {"value": "How many reconnection attempts to make"}},
                                    "model": {
                                      "annotations": {
                                        "default": "2",
                                        "int": {}
                                      },
                                      "type": "Number"
                                    },
                                    "key": {"name": "count"}
                                  }
                                ]
                              },
                              {
                                "annotations": {"typeId": "reconnect-forever"},
                                "type": "Object",
                                "fields": [{
                                  "annotations": {"description": {"value": "How often (in ms) to reconnect"}},
                                  "model": {
                                    "annotations": {
                                      "default": "2000",
                                      "classInformation": {
                                        "implementedInterfaces": ["java.lang.Comparable"],
                                        "parent": "java.lang.Number",
                                        "classname": "java.lang.Long",
                                        "hasDefaultConstructor": false,
                                        "isInstantiable": false,
                                        "isFinal": true,
                                        "genericTypes": [],
                                        "isInterface": false,
                                        "isAbstract": false,
                                        "isMap": false
                                      },
                                      "int": {}
                                    },
                                    "type": "Number"
                                  },
                                  "key": {"name": "frequency"}
                                }]
                              }
                            ],
                            "annotations": {"typeId": "ReconnectionStrategy"},
                            "type": "Union"
                          },
                          "key": {"name": "reconnectionStrategy"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": true,
                      "allowsReferences": false
                    },
                    "name": "poolingProfile",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Advanced",
                      "query": false,
                      "text": false,
                      "order": 4
                    },
                    "description": "Characteristics of the connection pool",
                    "modelProperties": {
                      "org.mule.runtime.extension.api.property.InfrastructureParameterModelProperty": {"sequence": 5},
                      "org.mule.runtime.extension.api.property.QNameModelProperty": {"value": {
                        "localPart": "pooling-profile",
                        "prefix": "mule",
                        "namespaceURI": "http://www.mulesoft.org/schema/mule/core"
                      }}
                    },
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "description": {"value": "A pooling profile is used to configure the pooling behaviour of Mule components. Each component can have its own pooling profile."},
                        "typeId": "org.mule.runtime.api.config.PoolingProfile"
                      },
                      "type": "Object",
                      "fields": [
                        {
                          "annotations": {"description": {"value": "Controls the maximum number of Mule components that can be borrowed from a session at one time. When set to a negative value, there is no limit to the number of components that may be active at one time. When maxActive is exceeded, the pool is said to be exhausted."}},
                          "model": {
                            "annotations": {
                              "default": "5",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxActive"}
                        },
                        {
                          "annotations": {"description": {"value": "Controls the maximum number of Mule components that can sit idle in the pool at any time. When set to a negative value, there is no limit to the number of Mule components that may be idle at one time."}},
                          "model": {
                            "annotations": {
                              "default": "5",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxIdle"}
                        },
                        {
                          "annotations": {"description": {"value": "Specifies the number of milliseconds to wait for a pooled component to become available when the pool is exhausted and the exhaustedAction is set to WHEN_EXHAUSTED_WAIT."}},
                          "model": {
                            "annotations": {
                              "default": "4000",
                              "classInformation": {
                                "implementedInterfaces": ["java.lang.Comparable"],
                                "parent": "java.lang.Number",
                                "classname": "java.lang.Long",
                                "hasDefaultConstructor": false,
                                "isInstantiable": false,
                                "isFinal": true,
                                "genericTypes": [],
                                "isInterface": false,
                                "isAbstract": false,
                                "isMap": false
                              },
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "maxWait"}
                        },
                        {
                          "annotations": {"description": {"value": "Determines the minimum amount of time an object may sit idle in the pool before it is eligible for eviction. When non-positive, no objects will be evicted from the pool due to idle time alone."}},
                          "model": {
                            "annotations": {
                              "default": "1800000",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "minEvictionMillis"}
                        },
                        {
                          "annotations": {"description": {"value": "Specifies the number of milliseconds between runs of the object evictor. When non-positive, no object evictor is executed."}},
                          "model": {
                            "annotations": {
                              "default": "-1",
                              "int": {}
                            },
                            "type": "Number"
                          },
                          "key": {"name": "evictionCheckIntervalMillis"}
                        },
                        {
                          "annotations": {"description": {"value": "Specifies the behavior of the Mule component pool when the pool is exhausted. Possible values are: \"WHEN_EXHAUSTED_FAIL\", which will throw a NoSuchElementException, \"WHEN_EXHAUSTED_WAIT\", which will block by invoking Object.wait(long) until a new or idle object is available, or WHEN_EXHAUSTED_GROW, which will create a new Mule instance and return it, essentially making maxActive meaningless. If a positive maxWait value is supplied, it will block for at most that many milliseconds, after which a NoSuchElementException will be thrown. If maxThreadWait is a negative value, it will block indefinitely."}},
                          "model": {
                            "annotations": {
                              "default": "WHEN_EXHAUSTED_GROW",
                              "enum": {
                                "values": [
                                  "WHEN_EXHAUSTED_GROW",
                                  "WHEN_EXHAUSTED_WAIT",
                                  "WHEN_EXHAUSTED_FAIL"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "exhaustedAction"}
                        },
                        {
                          "annotations": {"description": {"value": "Determines how components in a pool should be initialized. The possible values are: INITIALISE_NONE (will not load any components into the pool on startup), INITIALISE_ONE (will load one initial component into the pool on startup), or INITIALISE_ALL (will load all components in the pool on startup)"}},
                          "model": {
                            "annotations": {
                              "default": "INITIALISE_ONE",
                              "enum": {
                                "values": [
                                  "INITIALISE_NONE",
                                  "INITIALISE_ONE",
                                  "INITIALISE_ALL"
                                ],
                                "type": "[Ljava.lang.String;"
                              }
                            },
                            "type": "String"
                          },
                          "key": {"name": "initialisationPolicy"}
                        },
                        {
                          "annotations": {"description": {"value": "Whether pooling should be disabled"}},
                          "model": {
                            "annotations": {"default": "false"},
                            "type": "Boolean"
                          },
                          "key": {"name": "disabled"}
                        }
                      ]
                    },
                    "required": false,
                    "expressionSupport": "NOT_SUPPORTED"
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              },
              {
                "name": "Socket Properties",
                "layoutModel": {
                  "password": false,
                  "query": false,
                  "text": false,
                  "order": 2
                },
                "description": "",
                "modelProperties": {},
                "parameters": [
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "sendBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 5
                    },
                    "description": "The size of the buffer (in bytes) used when sending data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "role": "BEHAVIOUR",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "receiveBufferSize",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Buffer Configuration",
                      "query": false,
                      "text": false,
                      "order": 6
                    },
                    "description": "The size of the buffer (in bytes) used when receiving data, set on the socket itself.",
                    "modelProperties": {},
                    "allowedStereotypeModels": [],
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED"
                  },
                  {
                    "displayModel": {"summary": "Time, in milliseconds, that the socket will wait in a blocking operation before failing"},
                    "role": "BEHAVIOUR",
                    "description": "This sets the SO_TIMEOUT value on sockets. Indicates the amount of time (in milliseconds) that the socket will wait in a blocking operation before failing. <p> A value of 0 (the default) means waiting indefinitely.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {
                        "classInformation": {
                          "implementedInterfaces": ["java.lang.Comparable"],
                          "parent": "java.lang.Number",
                          "classname": "java.lang.Integer",
                          "hasDefaultConstructor": false,
                          "isInstantiable": false,
                          "isFinal": true,
                          "genericTypes": [],
                          "isInterface": false,
                          "isAbstract": false,
                          "isMap": false
                        },
                        "int": {}
                      },
                      "type": "Number"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "clientTimeout",
                    "layoutModel": {
                      "password": false,
                      "tabName": "Timeout Configuration",
                      "query": false,
                      "text": false,
                      "order": 7
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Indicates whether if the configured socket could be reused or fail at when trying to bind it"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "true",
                    "description": "If set (the default), SO_REUSEADDRESS is set on the sockets before binding. This helps reduce \"address already in use\" errors when a socket is re-used.",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "reuseAddress",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 8
                    },
                    "allowedStereotypeModels": []
                  },
                  {
                    "displayModel": {"summary": "Whether to enable the socket to send broadcast data"},
                    "role": "BEHAVIOUR",
                    "defaultValue": "false",
                    "description": "Enable/disable SO_BROADCAST into the DatagramSocket",
                    "modelProperties": {},
                    "type": {
                      "format": "java",
                      "annotations": {"typeId": "boolean"},
                      "type": "Boolean"
                    },
                    "required": false,
                    "expressionSupport": "SUPPORTED",
                    "hasDynamicType": false,
                    "isConfigOverride": false,
                    "dslConfiguration": {
                      "allowTopLevelDefinition": false,
                      "allowsInlineDefinition": false,
                      "allowsReferences": false
                    },
                    "name": "broadcast",
                    "layoutModel": {
                      "password": false,
                      "query": false,
                      "text": false,
                      "order": 9
                    },
                    "allowedStereotypeModels": []
                  }
                ],
                "exclusiveParametersModels": [],
                "showInDsl": false
              }
            ]
          }
        ]
      }
    ],
    "externalLibraries": [],
    "description": "An extension for sending and receiving connections through both TCP and UDP protocols.",
    "resources": [],
    "subTypes": [{
      "subTypes": [
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.SafeProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.DirectProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.LengthProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.StreamingProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.XmlMessageEOFProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.CustomProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.EOFProtocol"
        },
        {
          "format": "java",
          "type": "@ref:org.mule.extension.socket.api.connection.tcp.protocol.CustomClassLoadingLengthProtocol"
        }
      ],
      "baseType": {
        "format": "java",
        "type": "@ref:org.mule.extension.socket.api.socket.tcp.TcpProtocol"
      }
    }],
    "modelProperties": {},
    "constructs": [],
    "connectionProviders": [],
    "version": "1.1.0",
    "privilegedArtifacts": [],
    "importedTypes": [{
      "format": "java",
      "annotations": {
        "extensibleType": {},
        "classInformation": {
          "implementedInterfaces": [],
          "parent": "",
          "classname": "org.mule.runtime.api.store.ObjectStore",
          "hasDefaultConstructor": false,
          "isInstantiable": false,
          "isFinal": false,
          "genericTypes": [],
          "isInterface": true,
          "isAbstract": true,
          "isMap": false
        },
        "typeId": "org.mule.runtime.api.store.ObjectStore",
        "typeAlias": {"value": "ObjectStore"}
      },
      "type": "Object",
      "fields": []
    }],
    "xmlDsl": {
      "schemaVersion": "1.1.0",
      "prefix": "sockets",
      "schemaLocation": "http://www.mulesoft.org/schema/mule/sockets/current/mule-sockets.xsd",
      "namespace": "http://www.mulesoft.org/schema/mule/sockets",
      "xsdFileName": "mule-sockets.xsd"
    },
    "operations": [],
    "vendor": "Mulesoft",
    "name": "Sockets",
    "privilegedPackages": [],
    "category": "COMMUNITY",
    "notifications": [],
    "errors": [
      {
        "parent": "MULE:ANY",
        "error": "MULE:CONNECTIVITY",
        "handleable": true
      },
      {
        "error": "MULE:ANY",
        "handleable": true
      },
      {
        "parent": "SOCKETS:CONNECTIVITY",
        "error": "SOCKETS:UNKNOWN_HOST",
        "handleable": true
      },
      {
        "parent": "MULE:CONNECTIVITY",
        "error": "SOCKETS:CONNECTIVITY",
        "handleable": true
      },
      {
        "parent": "SOCKETS:CONNECTIVITY",
        "error": "SOCKETS:CONNECTION_TIMEOUT",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "MULE:RETRY_EXHAUSTED",
        "handleable": true
      },
      {
        "parent": "MULE:ANY",
        "error": "SOCKETS:LENGTH_EXCEEDED",
        "handleable": true
      },
      {
        "parent": "MULE:RETRY_EXHAUSTED",
        "error": "SOCKETS:RETRY_EXHAUSTED",
        "handleable": true
      }
    ]
  }
}